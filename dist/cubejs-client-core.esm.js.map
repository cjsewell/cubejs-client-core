{"version":3,"file":"cubejs-client-core.esm.js","sources":["../src/ResultSet.js","../src/SqlQuery.js","../src/Meta.js","../src/ProgressResult.js","../src/HttpTransport.js","../src/RequestError.js","../src/utils.js","../src/index.js"],"sourcesContent":["import dayjs from 'dayjs';\nimport en from 'dayjs/locale/en';\nimport {\n  groupBy, pipe, fromPairs, uniq, filter, map, dropLast, equals, reduce, minBy, maxBy, clone, mergeDeepLeft,\n  pluck, mergeAll, flatten,\n} from 'ramda';\n\ndayjs.locale({\n  ...en,\n  weekStart: 1,\n});\n\nexport const TIME_SERIES = {\n  day: (range) => range.by('d').map(d => d.format('YYYY-MM-DDT00:00:00.000')),\n  month: (range) => range.snapTo('month').by('M').map(d => d.format('YYYY-MM-01T00:00:00.000')),\n  year: (range) => range.snapTo('year').by('y').map(d => d.format('YYYY-01-01T00:00:00.000')),\n  hour: (range) => range.by('h').map(d => d.format('YYYY-MM-DDTHH:00:00.000')),\n  minute: (range) => range.by('m').map(d => d.format('YYYY-MM-DDTHH:mm:00.000')),\n  second: (range) => range.by('s').map(d => d.format('YYYY-MM-DDTHH:mm:ss.000')),\n  week: (range) => range.snapTo('week').by('w').map(d => d.startOf('week').format('YYYY-MM-DDT00:00:00.000'))\n};\n\nconst DateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nconst LocalDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z?$/;\n\nconst groupByToPairs = (keyFn) => {\n  const acc = new Map();\n\n  return (data) => {\n    data.forEach((row) => {\n      const key = keyFn(row);\n\n      if (!acc.has(key)) {\n        acc.set(key, []);\n      }\n\n      acc.get(key).push(row);\n    });\n\n    return Array.from(acc.entries());\n  };\n};\n\nconst unnest = (arr) => {\n  const res = [];\n  arr.forEach((subArr) => {\n    subArr.forEach(element => res.push(element));\n  });\n\n  return res;\n};\n\nexport const dayRange = (from, to) => ({\n  by: (value) => {\n    const results = [];\n\n    let start = dayjs(from);\n    const end = dayjs(to);\n\n    while (start.isBefore(end) || start.isSame(end)) {\n      results.push(start);\n      start = start.add(1, value);\n    }\n\n    return results;\n  },\n  snapTo: (value) => dayRange(dayjs(from).startOf(value), dayjs(to).endOf(value)),\n  start: dayjs(from),\n  end: dayjs(to),\n});\n\nexport const QUERY_TYPE = {\n  REGULAR_QUERY: 'regularQuery',\n  COMPARE_DATE_RANGE_QUERY: 'compareDateRangeQuery',\n  BLENDING_QUERY: 'blendingQuery',\n};\n\nclass ResultSet {\n  static measureFromAxis(axisValues) {\n    return axisValues[axisValues.length - 1];\n  }\n\n  static timeDimensionMember(td) {\n    return `${td.dimension}.${td.granularity}`;\n  }\n\n  static deserialize(data, options = {}) {\n    return new ResultSet(data.loadResponse, options);\n  }\n\n  constructor(loadResponse, options = {}) {\n    this.loadResponse = loadResponse;\n\n    if (this.loadResponse.queryType != null) {\n      this.queryType = loadResponse.queryType;\n      this.loadResponses = loadResponse.results;\n    } else {\n      this.queryType = QUERY_TYPE.REGULAR_QUERY;\n      this.loadResponse.pivotQuery = {\n        ...loadResponse.query,\n        queryType: this.queryType\n      };\n      this.loadResponses = [loadResponse];\n    }\n\n    if (!Object.values(QUERY_TYPE).includes(this.queryType)) {\n      throw new Error('Unknown query type');\n    }\n\n    this.parseDateMeasures = options.parseDateMeasures;\n    this.options = options;\n\n    this.backwardCompatibleData = [];\n  }\n\n  drillDown(drillDownLocator, pivotConfig) {\n    if (this.queryType === QUERY_TYPE.COMPARE_DATE_RANGE_QUERY) {\n      throw new Error('compareDateRange drillDown query is not currently supported');\n    }\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      throw new Error('Data blending drillDown query is not currently supported');\n    }\n\n    const { xValues = [], yValues = [] } = drillDownLocator;\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig);\n\n    const values = [];\n    normalizedPivotConfig.x.forEach((member, currentIndex) => values.push([member, xValues[currentIndex]]));\n    normalizedPivotConfig.y.forEach((member, currentIndex) => values.push([member, yValues[currentIndex]]));\n\n    const { filters: parentFilters = [], segments = [] } = this.query();\n    const { measures } = this.loadResponses[0].annotation;\n    let [, measureName] = values.find(([member]) => member === 'measures') || [];\n\n    if (measureName === undefined) {\n      [measureName] = Object.keys(measures);\n    }\n\n    if (!(measures[measureName] && measures[measureName].drillMembers || []).length) {\n      return null;\n    }\n\n    const filters = [\n      {\n        member: measureName,\n        operator: 'measureFilter',\n      },\n      ...parentFilters\n    ];\n    const timeDimensions = [];\n\n    values.filter(([member]) => member !== 'measures')\n      .forEach(([member, value]) => {\n        const [cubeName, dimension, granularity] = member.split('.');\n\n        if (granularity !== undefined) {\n          const range = dayRange(value, value).snapTo(granularity);\n\n          timeDimensions.push({\n            dimension: [cubeName, dimension].join('.'),\n            dateRange: [\n              range.start,\n              range.end\n            ].map((dt) => dt.format('YYYY-MM-DDTHH:mm:ss.SSS')),\n          });\n        } else if (value == null) {\n          filters.push({\n            member,\n            operator: 'notSet',\n          });\n        } else {\n          filters.push({\n            member,\n            operator: 'equals',\n            values: [value.toString()],\n          });\n        }\n      });\n\n    const { query } = this.loadResponses[0];\n    if (\n      timeDimensions.length === 0 &&\n      query.timeDimensions.length > 0 &&\n      query.timeDimensions[0].granularity == null\n    ) {\n      timeDimensions.push(query.timeDimensions[0]);\n    }\n\n    return {\n      ...measures[measureName].drillMembersGrouped,\n      filters,\n      ...(segments.length > 0 ? { segments } : {}),\n      timeDimensions,\n      segments,\n      timezone: query.timezone\n    };\n  }\n\n  series(pivotConfig) {\n    return this.seriesNames(pivotConfig).map(({ title, key }) => ({\n      title,\n      key,\n      series: this.chartPivot(pivotConfig).map(({ x, ...obj }) => ({ value: obj[key], x }))\n    }));\n  }\n\n  axisValues(axis, resultIndex = 0) {\n    const { query } = this.loadResponses[resultIndex];\n\n    return row => {\n      const value = (measure) => axis.filter(d => d !== 'measures')\n        .map(d => (row[d] != null ? row[d] : null)).concat(measure ? [measure] : []);\n\n      if (axis.find(d => d === 'measures') && (query.measures || []).length) {\n        return query.measures.map(value);\n      }\n\n      return [value()];\n    };\n  }\n\n  axisValuesString(axisValues, delimiter) {\n    const formatValue = (v) => {\n      if (v == null) {\n        return 'âˆ…';\n      } else if (v === '') {\n        return '[Empty string]';\n      } else {\n        return v;\n      }\n    };\n    return axisValues.map(formatValue).join(delimiter || ', ');\n  }\n\n  static getNormalizedPivotConfig(query = {}, pivotConfig = null) {\n    const defaultPivotConfig = {\n      x: [],\n      y: [],\n      fillMissingDates: true,\n      joinDateRange: false\n    };\n\n    const {\n      measures = [],\n      dimensions = []\n    } = query;\n\n    const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n\n    pivotConfig = pivotConfig || (timeDimensions.length ? {\n      x: timeDimensions.map(td => ResultSet.timeDimensionMember(td)),\n      y: dimensions\n    } : {\n      x: dimensions,\n      y: []\n    });\n\n    pivotConfig = mergeDeepLeft(pivotConfig, defaultPivotConfig);\n\n    const substituteTimeDimensionMembers = axis => axis.map(\n      subDim => (\n        (\n          timeDimensions.find(td => td.dimension === subDim) &&\n          !dimensions.find(d => d === subDim)\n        ) ?\n          ResultSet.timeDimensionMember(query.timeDimensions.find(td => td.dimension === subDim)) :\n          subDim\n      )\n    );\n\n    pivotConfig.x = substituteTimeDimensionMembers(pivotConfig.x);\n    pivotConfig.y = substituteTimeDimensionMembers(pivotConfig.y);\n\n    const allIncludedDimensions = pivotConfig.x.concat(pivotConfig.y);\n    const allDimensions = timeDimensions.map(td => ResultSet.timeDimensionMember(td)).concat(dimensions);\n\n    const dimensionFilter = (key) => allDimensions.includes(key) || key === 'measures';\n\n    pivotConfig.x = pivotConfig.x.concat(\n      allDimensions.filter(d => !allIncludedDimensions.includes(d) && d !== 'compareDateRange')\n    )\n      .filter(dimensionFilter);\n    pivotConfig.y = pivotConfig.y.filter(dimensionFilter);\n\n    if (!pivotConfig.x.concat(pivotConfig.y).find(d => d === 'measures')) {\n      pivotConfig.y.push('measures');\n    }\n\n    if (dimensions.includes('compareDateRange') && !pivotConfig.y.concat(pivotConfig.x).includes('compareDateRange')) {\n      pivotConfig.y.unshift('compareDateRange');\n    }\n\n    if (!measures.length) {\n      pivotConfig.x = pivotConfig.x.filter(d => d !== 'measures');\n      pivotConfig.y = pivotConfig.y.filter(d => d !== 'measures');\n    }\n\n    return pivotConfig;\n  }\n\n  normalizePivotConfig(pivotConfig) {\n    return ResultSet.getNormalizedPivotConfig(this.loadResponse.pivotQuery, pivotConfig);\n  }\n\n  timeSeries(timeDimension) {\n    if (!timeDimension.granularity) {\n      return null;\n    }\n\n    let { dateRange } = timeDimension;\n\n    if (!dateRange) {\n      const member = ResultSet.timeDimensionMember(timeDimension);\n      const dates = pipe(\n        map(row => row[member] && dayjs(row[member])),\n        filter(Boolean)\n      )(this.timeDimensionBackwardCompatibleData());\n\n      dateRange = dates.length && [\n        reduce(minBy(d => d.toDate()), dates[0], dates),\n        reduce(maxBy(d => d.toDate()), dates[0], dates)\n      ] || null;\n    }\n\n    if (!dateRange) {\n      return null;\n    }\n\n    const padToDay = timeDimension.dateRange ?\n      timeDimension.dateRange.find(d => d.match(DateRegex)) :\n      !['hour', 'minute', 'second'].includes(timeDimension.granularity);\n\n    const [start, end] = dateRange;\n    const range = dayRange(start, end);\n\n    if (!TIME_SERIES[timeDimension.granularity]) {\n      throw new Error(`Unsupported time granularity: ${timeDimension.granularity}`);\n    }\n\n    return TIME_SERIES[timeDimension.granularity](\n      padToDay ? range.snapTo('d') : range\n    );\n  }\n\n  pivot(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const { pivotQuery: query } = this.loadResponse;\n\n    const pivotImpl = (resultIndex = 0) => {\n      let groupByXAxis = groupByToPairs(({ xValues }) => this.axisValuesString(xValues));\n\n      let measureValue = (row, measure) => row[measure];\n\n      if (\n        pivotConfig.fillMissingDates &&\n        pivotConfig.x.length === 1 &&\n        (equals(\n          pivotConfig.x,\n          (query.timeDimensions || [])\n            .filter(td => Boolean(td.granularity))\n            .map(td => ResultSet.timeDimensionMember(td))\n        ))\n      ) {\n        const series = this.loadResponses.map(\n          (loadResponse) => this.timeSeries(loadResponse.query.timeDimensions[0])\n        );\n\n        if (series[0]) {\n          groupByXAxis = (rows) => {\n            const byXValues = groupBy(\n              ({ xValues }) => xValues[0],\n              rows\n            );\n            return series[resultIndex].map(d => [d, byXValues[d] || [{ xValues: [d], row: {} }]]);\n          };\n\n          measureValue = (row, measure) => row[measure] || 0;\n        }\n      }\n\n      const xGrouped = pipe(\n        map(row => this.axisValues(pivotConfig.x, resultIndex)(row).map(xValues => ({ xValues, row }))),\n        unnest,\n        groupByXAxis\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      const yValuesMap = {};\n      xGrouped.forEach(([, rows]) => {\n        rows.forEach(({ row }) => {\n          this.axisValues(pivotConfig.y, resultIndex)(row).forEach((values) => {\n            if (Object.keys(row).length > 0) {\n              yValuesMap[values.join()] = values;\n            }\n          });\n        });\n      });\n      const allYValues = Object.values(yValuesMap);\n\n      const measureOnX = Boolean(pivotConfig.x.find(d => d === 'measures'));\n\n      return xGrouped.map(([, rows]) => {\n        const { xValues } = rows[0];\n        const yGrouped = {};\n\n        rows.forEach(({ row }) => {\n          const arr = this.axisValues(pivotConfig.y, resultIndex)(row).map(yValues => ({ yValues, row }));\n          arr.forEach((res) => {\n            yGrouped[this.axisValuesString(res.yValues)] = res;\n          });\n        });\n\n        return {\n          xValues,\n          yValuesArray: unnest(allYValues.map(yValues => {\n            const measure = measureOnX ?\n              ResultSet.measureFromAxis(xValues) :\n              ResultSet.measureFromAxis(yValues);\n\n            return [[yValues, measureValue((yGrouped[this.axisValuesString(yValues)] ||\n              ({ row: {} })).row, measure)]];\n          }))\n        };\n      });\n    };\n\n    const pivots = this.loadResponses.length > 1\n      ? this.loadResponses.map((_, index) => pivotImpl(index))\n      : [];\n\n    return pivots.length\n      ? this.mergePivots(pivots, pivotConfig.joinDateRange)\n      : pivotImpl();\n  }\n\n  mergePivots(pivots, joinDateRange) {\n    const minLengthPivot = pivots.reduce(\n      (memo, current) => (memo != null && current.length >= memo.length ? memo : current), null\n    );\n\n    return minLengthPivot.map((_, index) => {\n      const xValues = joinDateRange\n        ? [pivots.map((pivot) => pivot[index] && pivot[index].xValues || []).join(', ')]\n        : minLengthPivot[index].xValues;\n\n      return {\n        xValues,\n        yValuesArray: unnest(pivots.map((pivot) => pivot[index].yValuesArray))\n      };\n    });\n  }\n\n  pivotedRows(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  chartPivot(pivotConfig) {\n    const validate = (value) => {\n      if (this.parseDateMeasures && LocalDateRegex.test(value)) {\n        return new Date(value);\n      } else if (!Number.isNaN(Number.parseFloat(value))) {\n        return Number.parseFloat(value);\n      }\n\n      return value;\n    };\n\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    const aliasSeries = (yValues, i) => {\n      // manual alias\n      if (pivotConfig && pivotConfig.aliasSeries && pivotConfig.aliasSeries[i]) {\n        return [pivotConfig.aliasSeries[i], ...yValues];\n      } else if (duplicateMeasures.has(yValues[0])) {\n        return [i, ...yValues];\n      }\n      return [yValues];\n    };\n\n    return this.pivot(pivotConfig).map(({ xValues, yValuesArray }) => {\n      const yValuesMap = {};\n\n      yValuesArray\n        .forEach(([yValues, m], i) => {\n          yValuesMap[this.axisValuesString(aliasSeries(yValues, i), ',')] = m && validate(m);\n        });\n\n      return ({\n        x: this.axisValuesString(xValues, ','),\n        xValues,\n        ...yValuesMap\n      });\n    });\n  }\n\n  tablePivot(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const isMeasuresPresent = normalizedPivotConfig.x.concat(normalizedPivotConfig.y).includes('measures');\n\n    return this.pivot(normalizedPivotConfig).map(({ xValues, yValuesArray }) => fromPairs(\n      normalizedPivotConfig.x\n        .map((key, index) => [key, xValues[index]])\n        .concat(\n          isMeasuresPresent ? yValuesArray.map(([yValues, measure]) => [\n            yValues.length ? yValues.join() : 'value',\n            measure\n          ]) : []\n        )\n    ));\n  }\n\n  tableColumns(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const annotations = pipe(\n      pluck('annotation'),\n      reduce(mergeDeepLeft(), {})\n    )(this.loadResponses);\n    const flatMeta = Object.values(annotations).reduce((a, b) => ({ ...a, ...b }), {});\n    const schema = {};\n\n    const extractFields = (key) => {\n      const { title, shortTitle, type, format, meta } = flatMeta[key] || {};\n\n      return {\n        key,\n        title,\n        shortTitle,\n        type,\n        format,\n        meta\n      };\n    };\n\n    const pivot = this.pivot(normalizedPivotConfig);\n\n    (pivot[0] && pivot[0].yValuesArray || []).forEach(([yValues]) => {\n      if (yValues.length > 0) {\n        let currentItem = schema;\n\n        yValues.forEach((value, index) => {\n          currentItem[value] = {\n            key: value,\n            memberId: normalizedPivotConfig.y[index] === 'measures'\n              ? value\n              : normalizedPivotConfig.y[index],\n            children: (currentItem[value] && currentItem[value].children) || {}\n          };\n\n          currentItem = currentItem[value].children;\n        });\n      }\n    });\n\n    const toColumns = (item = {}, path = []) => {\n      if (Object.keys(item).length === 0) {\n        return [];\n      }\n\n      return Object.values(item).map(({ key, ...currentItem }) => {\n        const children = toColumns(currentItem.children, [\n          ...path,\n          key\n        ]);\n\n        const { title, shortTitle, ...fields } = extractFields(currentItem.memberId);\n\n        const dimensionValue = key !== currentItem.memberId || title == null ? key : '';\n\n        if (!children.length) {\n          return {\n            ...fields,\n            key,\n            dataIndex: [...path, key].join(),\n            title: [title, dimensionValue].join(' ').trim(),\n            shortTitle: dimensionValue || shortTitle,\n          };\n        }\n\n        return {\n          ...fields,\n          key,\n          title: [title, dimensionValue].join(' ').trim(),\n          shortTitle: dimensionValue || shortTitle,\n          children,\n        };\n      });\n    };\n\n    let otherColumns = [];\n\n    if (!pivot.length && normalizedPivotConfig.y.includes('measures')) {\n      otherColumns = (this.loadResponses[0].query.measures || []).map(\n        (key) => ({ ...extractFields(key), dataIndex: key })\n      );\n    }\n\n    // Syntatic column to display the measure value\n    if (!normalizedPivotConfig.y.length && normalizedPivotConfig.x.includes('measures')) {\n      otherColumns.push({\n        key: 'value',\n        dataIndex: 'value',\n        title: 'Value',\n        shortTitle: 'Value',\n        type: 'string',\n      });\n    }\n\n    return normalizedPivotConfig.x\n      .map((key) => {\n        if (key === 'measures') {\n          return {\n            key: 'measures',\n            dataIndex: 'measures',\n            title: 'Measures',\n            shortTitle: 'Measures',\n            type: 'string',\n          };\n        }\n\n        return ({ ...extractFields(key), dataIndex: key });\n      })\n      .concat(toColumns(schema))\n      .concat(otherColumns);\n  }\n\n  totalRow(pivotConfig) {\n    return this.chartPivot(pivotConfig)[0];\n  }\n\n  categories(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  seriesNames(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const measures = pipe(\n      pluck('annotation'),\n      pluck('measures'),\n      mergeAll\n    )(this.loadResponses);\n\n    const seriesNames = unnest(this.loadResponses.map((_, index) => pipe(\n      map(this.axisValues(pivotConfig.y, index)),\n      unnest,\n      uniq\n    )(\n      this.timeDimensionBackwardCompatibleData(index)\n    )));\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    const aliasSeries = (yValues, i) => {\n      if (pivotConfig && pivotConfig.aliasSeries && pivotConfig.aliasSeries[i]) {\n        return [pivotConfig.aliasSeries[i], ...yValues];\n      } else if (duplicateMeasures.has(yValues[0])) {\n        return [i, ...yValues];\n      }\n      return yValues;\n    };\n\n    return seriesNames.map((axisValues, i) => {\n      const aliasedAxis = aliasSeries(axisValues, i);\n      return {\n        title: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].title\n            ) :\n            aliasedAxis, ', '\n        ),\n        key: this.axisValuesString(aliasedAxis, ','),\n        yValues: axisValues\n      };\n    });\n  }\n\n  query() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].query;\n  }\n\n  pivotQuery() {\n    return this.loadResponse.pivotQuery || null;\n  }\n\n  rawData() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].data;\n  }\n\n  annotation() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].annotation;\n  }\n\n  timeDimensionBackwardCompatibleData(resultIndex = 0) {\n    if (!this.backwardCompatibleData[resultIndex]) {\n      const { data, query } = this.loadResponses[resultIndex];\n      const timeDimensions = (query.timeDimensions || []).filter(td => Boolean(td.granularity));\n\n      this.backwardCompatibleData[resultIndex] = data.map(row => (\n        {\n          ...row,\n          ...(\n            fromPairs(Object.keys(row)\n              .filter(\n                field => timeDimensions.find(d => d.dimension === field) &&\n                  !row[ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field))]\n              ).map(field => (\n                [ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field)), row[field]]\n              )))\n          )\n        }\n      ));\n    }\n\n    return this.backwardCompatibleData[resultIndex];\n  }\n\n  decompose() {\n    return this.loadResponses.map((result) => new ResultSet({\n      queryType: QUERY_TYPE.REGULAR_QUERY,\n      pivotQuery: {\n        ...result.query,\n        queryType: QUERY_TYPE.REGULAR_QUERY,\n      },\n      results: [result]\n    }, this.options));\n  }\n\n  serialize() {\n    return {\n      loadResponse: clone(this.loadResponse)\n    };\n  }\n}\n\nexport default ResultSet;\n","export default class SqlQuery {\n  constructor(sqlQuery) {\n    this.sqlQuery = sqlQuery;\n  }\n\n  rawQuery() {\n    return this.sqlQuery.sql;\n  }\n\n  sql() {\n    return this.rawQuery().sql[0];\n  }\n}\n","/**\n * @module @cubejs-client/core\n */\n\nimport { unnest, fromPairs } from 'ramda';\n\nconst memberMap = (memberArray) => fromPairs(memberArray.map((m) => [m.name, m]));\n\nconst operators = {\n  string: [\n    { name: 'contains', title: 'contains' },\n    { name: 'notContains', title: 'does not contain' },\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n  ],\n  number: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'gt', title: '>' },\n    { name: 'gte', title: '>=' },\n    { name: 'lt', title: '<' },\n    { name: 'lte', title: '<=' },\n  ],\n  time: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'inDateRange', title: 'in date range' },\n    { name: 'notInDateRange', title: 'not in date range' },\n    { name: 'afterDate', title: 'after date' },\n    { name: 'beforeDate', title: 'before date' },\n  ],\n};\n\n/**\n * Contains information about available cubes and it's members.\n */\nclass Meta {\n  constructor(metaResponse) {\n    this.meta = metaResponse;\n    const { cubes } = this.meta;\n    this.cubes = cubes;\n    this.cubesMap = fromPairs(\n      cubes.map((c) => [\n        c.name,\n        {\n          measures: memberMap(c.measures),\n          dimensions: memberMap(c.dimensions),\n          segments: memberMap(c.segments),\n        },\n      ])\n    );\n  }\n\n  membersForQuery(query, memberType) {\n    return unnest(this.cubes.map((c) => c[memberType])).sort((a, b) => (a.title > b.title ? 1 : -1));\n  }\n\n  membersGroupedByCube() {\n    const memberKeys = ['measures', 'dimensions', 'segments', 'timeDimensions'];\n\n    return this.cubes.reduce(\n      (memo, cube) => {\n        memberKeys.forEach((key) => {\n          let members = cube[key];\n\n          if (key === 'timeDimensions') {\n            members = cube.dimensions.filter((m) => m.type === 'time');\n          } else if (key === 'dimensions') {\n            members = cube.dimensions.filter((m) => m.type !== 'time');\n          }\n\n          memo[key] = [\n            ...memo[key],\n            {\n              cubeName: cube.name,\n              cubeTitle: cube.title,\n              members\n            },\n          ];\n        });\n\n        return memo;\n      },\n      {\n        measures: [],\n        dimensions: [],\n        segments: [],\n        timeDimensions: [],\n      }\n    );\n  }\n\n  resolveMember(memberName, memberType) {\n    const [cube] = memberName.split('.');\n\n    if (!this.cubesMap[cube]) {\n      return { title: memberName, error: `Cube not found ${cube} for path '${memberName}'` };\n    }\n\n    const memberTypes = Array.isArray(memberType) ? memberType : [memberType];\n    const member = memberTypes\n      .map((type) => this.cubesMap[cube][type] && this.cubesMap[cube][type][memberName])\n      .find((m) => m);\n\n    if (!member) {\n      return {\n        title: memberName,\n        error: `Path not found '${memberName}'`,\n      };\n    }\n\n    return member;\n  }\n\n  defaultTimeDimensionNameFor(memberName) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return null;\n    }\n    return Object.keys(this.cubesMap[cube].dimensions || {}).find(\n      (d) => this.cubesMap[cube].dimensions[d].type === 'time'\n    );\n  }\n\n  filterOperatorsForMember(memberName, memberType) {\n    const member = this.resolveMember(memberName, memberType);\n\n    return operators[member.type] || operators.string;\n  }\n}\n\nexport default Meta;\n","export default class ProgressResult {\n  constructor(progressResponse) {\n    this.progressResponse = progressResponse;\n  }\n\n  stage() {\n    return this.progressResponse.stage;\n  }\n\n  timeElapsed() {\n    return this.progressResponse.timeElapsed;\n  }\n}\n","import fetch from 'cross-fetch';\nimport 'url-search-params-polyfill';\n\nclass HttpTransport {\n  constructor({ authorization, apiUrl, method, headers = {}, credentials }) {\n    this.authorization = authorization;\n    this.apiUrl = apiUrl;\n    this.method = method;\n    this.headers = headers;\n    this.credentials = credentials;\n  }\n\n  request(method, { baseRequestId, ...params }) {\n    let spanCounter = 1;\n    const searchParams = new URLSearchParams(\n      params && Object.keys(params)\n        .map(k => ({ [k]: typeof params[k] === 'object' ? JSON.stringify(params[k]) : params[k] }))\n        .reduce((a, b) => ({ ...a, ...b }), {})\n    );\n\n    let url = `${this.apiUrl}/${method}${searchParams.toString().length ? `?${searchParams}` : ''}`;\n\n    const requestMethod = this.method || (url.length < 2000 ? 'GET' : 'POST');\n    if (requestMethod === 'POST') {\n      url = `${this.apiUrl}/${method}`;\n      this.headers['Content-Type'] = 'application/json';\n    }\n\n    // Currently, all methods make GET requests. If a method makes a request with a body payload,\n    // remember to add {'Content-Type': 'application/json'} to the header.\n    const runRequest = () => fetch(url, {\n      method: requestMethod,\n      headers: {\n        Authorization: this.authorization,\n        'x-request-id': baseRequestId && `${baseRequestId}-span-${spanCounter++}`,\n        ...this.headers\n      },\n      credentials: this.credentials,\n      body: requestMethod === 'POST' ? JSON.stringify(params) : null\n    });\n\n    return {\n      async subscribe(callback) {\n        const result = await runRequest();\n        return callback(result, () => this.subscribe(callback));\n      }\n    };\n  }\n}\n\nexport default HttpTransport;\n","export default class RequestError extends Error {\n  constructor(message, response) {\n    super(message);\n    this.response = response;\n  }\n}\n","import { indexBy, prop, clone, equals } from 'ramda';\n\nexport const DEFAULT_GRANULARITY = 'day';\n\nexport const GRANULARITIES = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'year', title: 'Year' },\n];\n\nexport function areQueriesEqual(query1 = {}, query2 = {}) {\n  return (\n    equals(Object.entries((query1 && query1.order) || {}), Object.entries((query2 && query2.order) || {})) &&\n    equals(query1, query2)\n  );\n}\n\nexport function defaultOrder(query) {\n  const granularity = (query.timeDimensions || []).find((d) => d.granularity);\n\n  if (granularity) {\n    return {\n      [granularity.dimension]: 'asc',\n    };\n  } else if ((query.measures || []).length > 0 && (query.dimensions || []).length > 0) {\n    return {\n      [query.measures[0]]: 'desc',\n    };\n  } else if ((query.dimensions || []).length > 0) {\n    return {\n      [query.dimensions[0]]: 'asc',\n    };\n  }\n\n  return {};\n}\n\nexport function defaultHeuristics(newState, oldQuery = {}, options) {\n  const { query, ...props } = clone(newState);\n  const { meta, sessionGranularity } = options;\n  const granularity = sessionGranularity || DEFAULT_GRANULARITY;\n\n  let state = {\n    query,\n    ...props,\n  };\n\n  let newQuery = null;\n  if (!areQueriesEqual(query, oldQuery)) {\n    newQuery = query;\n  }\n\n  if (Array.isArray(newQuery) || Array.isArray(oldQuery)) {\n    return newState;\n  }\n\n  if (newQuery) {\n    if (\n      (oldQuery.timeDimensions || []).length === 1 &&\n      (newQuery.timeDimensions || []).length === 1 &&\n      newQuery.timeDimensions[0].granularity &&\n      oldQuery.timeDimensions[0].granularity !== newQuery.timeDimensions[0].granularity\n    ) {\n      state = {\n        ...state,\n        sessionGranularity: newQuery.timeDimensions[0].granularity,\n      };\n    }\n\n    if (\n      ((oldQuery.measures || []).length === 0 && (newQuery.measures || []).length > 0) ||\n      ((oldQuery.measures || []).length === 1 &&\n        (newQuery.measures || []).length === 1 &&\n        oldQuery.measures[0] !== newQuery.measures[0])\n    ) {\n      const [td] = newQuery.timeDimensions || [];\n      const defaultTimeDimension = meta.defaultTimeDimensionNameFor(newQuery.measures[0]);\n      newQuery = {\n        ...newQuery,\n        timeDimensions: defaultTimeDimension\n          ? [\n            {\n              dimension: defaultTimeDimension,\n              granularity: (td && td.granularity) || granularity,\n              dateRange: td && td.dateRange,\n            },\n          ]\n          : [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: defaultTimeDimension ? 'line' : 'number',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length === 0 && (newQuery.dimensions || []).length > 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({ ...td, granularity: undefined })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: 'table',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length > 0 && (newQuery.dimensions || []).length === 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: td.granularity || granularity,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: (newQuery.timeDimensions || []).length ? 'line' : 'number',\n      };\n    }\n\n    if (\n      ((oldQuery.dimensions || []).length > 0 || (oldQuery.measures || []).length > 0) &&\n      (newQuery.dimensions || []).length === 0 &&\n      (newQuery.measures || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: [],\n        filters: [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        sessionGranularity: null,\n      };\n    }\n    return state;\n  }\n\n  if (state.chartType) {\n    const newChartType = state.chartType;\n    if (\n      (newChartType === 'line' || newChartType === 'area') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      !oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity }],\n        },\n      };\n    }\n\n    if (\n      (newChartType === 'pie' || newChartType === 'table' || newChartType === 'number') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity: undefined }],\n        },\n      };\n    }\n  }\n\n  return state;\n}\n\nexport function isQueryPresent(query) {\n  if (!query) {\n    return false;\n  }\n\n  return (Array.isArray(query) ? query : [query]).every(\n    (q) => (q.measures && q.measures.length) ||\n      (q.dimensions && q.dimensions.length) ||\n      (q.timeDimensions && q.timeDimensions.length)\n  );\n}\n\nexport function movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis) {\n  const nextPivotConfig = {\n    ...pivotConfig,\n    x: [...pivotConfig.x],\n    y: [...pivotConfig.y],\n  };\n  const id = pivotConfig[sourceAxis][sourceIndex];\n  const lastIndex = nextPivotConfig[destinationAxis].length - 1;\n\n  if (id === 'measures') {\n    destinationIndex = lastIndex + 1;\n  } else if (destinationIndex >= lastIndex && nextPivotConfig[destinationAxis][lastIndex] === 'measures') {\n    destinationIndex = lastIndex - 1;\n  }\n\n  nextPivotConfig[sourceAxis].splice(sourceIndex, 1);\n  nextPivotConfig[destinationAxis].splice(destinationIndex, 0, id);\n\n  return nextPivotConfig;\n}\n\nexport function moveItemInArray(list, sourceIndex, destinationIndex) {\n  const result = [...list];\n  const [removed] = result.splice(sourceIndex, 1);\n  result.splice(destinationIndex, 0, removed);\n\n  return result;\n}\n\nexport function flattenFilters(filters = []) {\n  return filters.reduce((memo, filter) => {\n    if (filter.or || filter.and) {\n      return [...memo, ...flattenFilters(filter.or || filter.and)];\n    }\n\n    return [...memo, filter];\n  }, []);\n}\n\nexport function getQueryMembers(query = {}) {\n  const keys = ['measures', 'dimensions', 'segments'];\n  const members = new Set();\n\n  keys.forEach((key) => (query[key] || []).forEach((member) => members.add(member)));\n  (query.timeDimensions || []).forEach((td) => members.add(td.dimension));\n\n  flattenFilters(query.filters).forEach((filter) => members.add(filter.dimension || filter.member));\n\n  return [...members];\n}\n\nexport function getOrderMembersFromOrder(orderMembers, order) {\n  const ids = new Set();\n  const indexedOrderMembers = indexBy(prop('id'), orderMembers);\n  const entries = Array.isArray(order) ? order : Object.entries(order || {});\n  const nextOrderMembers = [];\n\n  entries.forEach(([memberId, currentOrder]) => {\n    if (currentOrder !== 'none' && indexedOrderMembers[memberId]) {\n      ids.add(memberId);\n      nextOrderMembers.push({\n        ...indexedOrderMembers[memberId],\n        order: currentOrder,\n      });\n    }\n  });\n  orderMembers.forEach((member) => {\n    if (!ids.has(member.id)) {\n      nextOrderMembers.push({\n        ...member,\n        order: member.order || 'none',\n      });\n    }\n  });\n\n  return nextOrderMembers;\n}\n","import { v4 as uuid } from 'uuid';\nimport ResultSet from './ResultSet';\nimport SqlQuery from './SqlQuery';\nimport Meta from './Meta';\nimport ProgressResult from './ProgressResult';\nimport HttpTransport from './HttpTransport';\nimport RequestError from './RequestError';\n\nlet mutexCounter = 0;\n\nconst MUTEX_ERROR = 'Mutex has been changed';\n\nconst mutexPromise = (promise) => new Promise((resolve, reject) => {\n  promise.then(r => resolve(r), e => e !== MUTEX_ERROR && reject(e));\n});\n\nclass CubejsApi {\n  constructor(apiToken, options) {\n    if (typeof apiToken === 'object') {\n      options = apiToken;\n      apiToken = undefined;\n    }\n    options = options || {};\n\n    if (!options.transport && !options.apiUrl) {\n      throw new Error('The `apiUrl` option is required');\n    }\n\n    this.apiToken = apiToken;\n    this.apiUrl = options.apiUrl;\n    this.method = options.method;\n    this.headers = options.headers || {};\n    this.credentials = options.credentials;\n    this.transport = options.transport || new HttpTransport({\n      authorization: typeof apiToken === 'function' ? undefined : apiToken,\n      apiUrl: this.apiUrl,\n      method: this.method,\n      headers: this.headers,\n      credentials: this.credentials\n    });\n    this.pollInterval = options.pollInterval || 5;\n    this.parseDateMeasures = options.parseDateMeasures;\n  }\n\n  request(method, params) {\n    return this.transport.request(method, { baseRequestId: uuid(), ...params });\n  }\n\n  loadMethod(request, toResult, options, callback) {\n    const mutexValue = ++mutexCounter;\n    if (typeof options === 'function' && !callback) {\n      callback = options;\n      options = undefined;\n    }\n\n    options = options || {};\n\n    const mutexKey = options.mutexKey || 'default';\n    if (options.mutexObj) {\n      options.mutexObj[mutexKey] = mutexValue;\n    }\n\n    const requestPromise = this.updateTransportAuthorization().then(() => request());\n\n    let unsubscribed = false;\n\n    const checkMutex = async () => {\n      const requestInstance = await requestPromise;\n\n      if (options.mutexObj && options.mutexObj[mutexKey] !== mutexValue) {\n        unsubscribed = true;\n        if (requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        throw MUTEX_ERROR;\n      }\n    };\n\n    const loadImpl = async (response, next) => {\n      const requestInstance = await requestPromise;\n\n      const subscribeNext = async () => {\n        if (options.subscribe && !unsubscribed) {\n          if (requestInstance.unsubscribe) {\n            return next();\n          } else {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n            return next();\n          }\n        }\n        return null;\n      };\n\n      const continueWait = async (wait) => {\n        if (!unsubscribed) {\n          if (wait) {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n          }\n          return next();\n        }\n        return null;\n      };\n\n      await this.updateTransportAuthorization();\n\n      if (response.status === 502) {\n        await checkMutex();\n        return continueWait(true);\n      }\n\n      let body = {};\n\n      try {\n        body = await response.json();\n      } catch (_) {\n        body.error = await response.text();\n      }\n\n      if (body.error === 'Continue wait') {\n        await checkMutex();\n        if (options.progressCallback) {\n          options.progressCallback(new ProgressResult(body));\n        }\n        return continueWait();\n      }\n\n      if (response.status !== 200) {\n        await checkMutex();\n        if (!options.subscribe && requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n\n        const error = new RequestError(body.error, body); // TODO error class\n        if (callback) {\n          callback(error);\n        } else {\n          throw error;\n        }\n\n        return subscribeNext();\n      }\n      await checkMutex();\n      if (!options.subscribe && requestInstance.unsubscribe) {\n        await requestInstance.unsubscribe();\n      }\n      const result = toResult(body);\n      if (callback) {\n        callback(null, result);\n      } else {\n        return result;\n      }\n\n      return subscribeNext();\n    };\n\n    const promise = requestPromise.then(requestInstance => mutexPromise(requestInstance.subscribe(loadImpl)));\n\n    if (callback) {\n      return {\n        unsubscribe: async () => {\n          const requestInstance = await requestPromise;\n\n          unsubscribed = true;\n          if (requestInstance.unsubscribe) {\n            return requestInstance.unsubscribe();\n          }\n          return null;\n        }\n      };\n    } else {\n      return promise;\n    }\n  }\n\n  async updateTransportAuthorization() {\n    if (typeof this.apiToken === 'function') {\n      const token = await this.apiToken();\n      if (this.transport.authorization !== token) {\n        this.transport.authorization = token;\n      }\n    }\n  }\n\n  load(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('load', {\n        query,\n        queryType: 'multi'\n      }),\n      (response) => new ResultSet(response, { parseDateMeasures: this.parseDateMeasures }),\n      options,\n      callback\n    );\n  }\n\n  sql(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('sql', { query }),\n      (response) => (Array.isArray(response) ? response.map((body) => new SqlQuery(body)) : new SqlQuery(response)),\n      options,\n      callback\n    );\n  }\n\n  meta(options, callback) {\n    return this.loadMethod(\n      () => this.request('meta'),\n      (body) => new Meta(body),\n      options,\n      callback\n    );\n  }\n\n  dryRun(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('dry-run', { query }),\n      (response) => response,\n      options,\n      callback\n    );\n  }\n\n  subscribe(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('subscribe', {\n        query,\n        queryType: 'multi'\n      }),\n      (body) => new ResultSet(body, { parseDateMeasures: this.parseDateMeasures }),\n      { ...options, subscribe: true },\n      callback\n    );\n  }\n}\n\nexport default (apiToken, options) => new CubejsApi(apiToken, options);\n\nexport { CubejsApi, HttpTransport, ResultSet };\nexport {\n  areQueriesEqual,\n  defaultHeuristics,\n  movePivotItem,\n  isQueryPresent,\n  moveItemInArray,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  getOrderMembersFromOrder,\n  GRANULARITIES\n} from './utils';\n"],"names":["dayjs","locale","en","weekStart","TIME_SERIES","day","range","by","map","d","format","month","snapTo","year","hour","minute","second","week","startOf","DateRegex","LocalDateRegex","groupByToPairs","keyFn","acc","Map","data","forEach","row","key","has","set","get","push","Array","from","entries","unnest","arr","res","subArr","element","dayRange","to","value","results","start","end","isBefore","isSame","add","endOf","QUERY_TYPE","REGULAR_QUERY","COMPARE_DATE_RANGE_QUERY","BLENDING_QUERY","ResultSet","loadResponse","options","queryType","loadResponses","pivotQuery","query","Object","values","includes","Error","parseDateMeasures","backwardCompatibleData","drillDownLocator","pivotConfig","xValues","yValues","normalizedPivotConfig","normalizePivotConfig","x","member","currentIndex","y","filters","parentFilters","segments","measures","annotation","find","measureName","undefined","keys","drillMembers","length","operator","timeDimensions","filter","split","cubeName","dimension","granularity","join","dateRange","dt","toString","drillMembersGrouped","timezone","seriesNames","title","series","chartPivot","obj","axis","resultIndex","measure","concat","axisValues","delimiter","formatValue","v","getNormalizedPivotConfig","timeDimension","timeDimensionMember","dates","pipe","Boolean","timeDimensionBackwardCompatibleData","reduce","minBy","toDate","maxBy","padToDay","match","pivotImpl","groupByXAxis","axisValuesString","measureValue","fillMissingDates","equals","td","timeSeries","rows","byXValues","groupBy","xGrouped","yValuesMap","allYValues","measureOnX","yGrouped","yValuesArray","measureFromAxis","pivots","_","index","mergePivots","joinDateRange","minLengthPivot","memo","current","pivot","validate","test","Date","Number","isNaN","parseFloat","duplicateMeasures","Set","allMeasures","flatten","e","i","a","indexOf","m","aliasSeries","isMeasuresPresent","fromPairs","annotations","pluck","mergeDeepLeft","flatMeta","b","schema","extractFields","shortTitle","type","meta","currentItem","memberId","children","toColumns","item","path","fields","dimensionValue","dataIndex","trim","otherColumns","mergeAll","uniq","aliasedAxis","dropLast","field","result","clone","defaultPivotConfig","dimensions","substituteTimeDimensionMembers","subDim","allIncludedDimensions","allDimensions","dimensionFilter","unshift","SqlQuery","sqlQuery","sql","rawQuery","memberMap","memberArray","name","operators","string","number","time","Meta","metaResponse","cubes","cubesMap","c","memberType","sort","memberKeys","cube","members","cubeTitle","memberName","error","memberTypes","isArray","resolveMember","ProgressResult","progressResponse","stage","timeElapsed","HttpTransport","authorization","apiUrl","method","headers","credentials","baseRequestId","params","spanCounter","searchParams","URLSearchParams","k","JSON","stringify","url","requestMethod","runRequest","fetch","Authorization","body","subscribe","callback","RequestError","message","response","DEFAULT_GRANULARITY","GRANULARITIES","areQueriesEqual","query1","query2","order","defaultOrder","defaultHeuristics","newState","oldQuery","props","sessionGranularity","state","newQuery","defaultTimeDimension","defaultTimeDimensionNameFor","shouldApplyHeuristicOrder","chartType","newChartType","isQueryPresent","every","q","movePivotItem","sourceIndex","destinationIndex","sourceAxis","destinationAxis","nextPivotConfig","id","lastIndex","splice","moveItemInArray","list","removed","flattenFilters","or","and","getQueryMembers","getOrderMembersFromOrder","orderMembers","ids","indexedOrderMembers","indexBy","prop","nextOrderMembers","currentOrder","mutexCounter","MUTEX_ERROR","mutexPromise","promise","Promise","resolve","reject","then","r","CubejsApi","apiToken","transport","pollInterval","request","uuid","toResult","mutexValue","mutexKey","mutexObj","requestPromise","updateTransportAuthorization","unsubscribed","checkMutex","requestInstance","unsubscribe","loadImpl","next","subscribeNext","setTimeout","continueWait","wait","status","json","text","progressCallback","token","loadMethod"],"mappings":"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"}